#
# Windows run_once_after (post-apply)
#

################################################################################
# BEGIN
################################################################################

Write-Host "Starting Windows run_once_after (post-apply)" `
  -ForegroundColor Green

################################################################################
# PowerShell 7
################################################################################

# {{- if stat (joinPath .chezmoi.homeDir "Documents" "WindowsPowerShell") }}
New-Item -ItemType HardLink -Force `
  -Target "$HOME\Documents\PowerShell\Microsoft.PowerShell_profile.ps1" `
  -Path   "$HOME\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1"
# {{- end }}

################################################################################
# Windows Terminal
################################################################################

# {{- if stat (joinPath .chezmoi.homeDir "AppData" "Local" "Packages" "Microsoft.WindowsTerminal_8wekyb3d8bbwe" "LocalState") }}
New-Item -ItemType HardLink -Force `
  -Target {{ joinPath .chezmoi.sourceDir "windows" "wt" "wt.json" | quote }} `
  -Path   "$env:LOCALAPPDATA\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState\settings.json"
# {{- end }}

################################################################################
# Neovim
################################################################################

# NOTES: Better to do this manually.

## Remove Neovim data if it's not yet initialized.
## This is to overcome NvChad error
## when treesitter queries for crystal already exist before initializion.
#if (Test-Path $env:LOCALAPPDATA\nvim-data\base46) {
#  Remove-Item -Recurse -Force $env:LOCALAPPDATA\nvim-data
#}

# {{- if stat (joinPath .chezmoi.homeDir "AppData" "Local" "nvim" "lua" "plugins") }}
New-Item -ItemType HardLink -Force `
  -Target {{ joinPath .chezmoi.sourceDir "neovim" "init.lua" | quote }} `
  -Path   "$env:LOCALAPPDATA\nvim\init.lua"

New-Item -ItemType HardLink -Force `
  -Target {{ joinPath .chezmoi.sourceDir "neovim" "lua" "chadrc.lua" | quote }} `
  -Path   "$env:LOCALAPPDATA\nvim\lua\chadrc.lua"

New-Item -ItemType HardLink -Force `
  -Target {{ joinPath .chezmoi.sourceDir "neovim" "lua" "plugins" "init.lua" | quote }} `
  -Path   "$env:LOCALAPPDATA\nvim\lua\plugins\init.lua"

# {{-   if stat (joinPath .chezmoi.homeDir "AppData" "Local" "nvim-data" "lazy" "nvim-treesitter" "queries" "queries" "crystal") }}
# {{-     if stat (joinPath .chezmoi.homeDir ".tree-sitter-crystal" "queries" "nvim") }}
$scm = @(
  "aerial"     ,
  "context"    ,
  "folds"      ,
  "highlights" ,
  "injections"
)

foreach ($f in $scm) {
  $file = "$HOME\.tree-sitter-crystal\queries\nvim\$f.scm" `
  $link = "$env:LOCALAPPDATA\nvim-data\$f.scm"

  if (Test-Path $file) {
    New-Item -ItemType HardLink -Force -Target "$file" -Path "$link"
  }
}
# {{-     end }}
# {{-   end }}
# {{- end }}

################################################################################
# nvs
################################################################################

# {{- if stat (joinPath .chezmoi.homeDir "AppData" "Local" "nvs") }}
New-Item -ItemType HardLink -Force `
  -Target {{ joinPath .chezmoi.sourceDir "dot_nvs" "settings.json" | quote }} `
  -Path   "$env:LOCALAPPDATA\nvs\settings.json"

# {{-   if stat (joinPath .chezmoi.homeDir "AppData" "Local" "nvs" "node") }}
# Add Node.js LTS
nvs add lts
# {{-   end }}
# {{- end }}

################################################################################
# END
################################################################################

Write-Host "Windows run_once_after (post-apply) is done" `
  -ForegroundColor Green

# vim: ft=ps1:
