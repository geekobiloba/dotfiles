################################################################################
# General environment
################################################################################

export   LESS="-Ri"
export EDITOR="nvim"

# Display the first man page found
# See: man man
export MAN_POSIXLY_CORRECT=1

# Ansible requires the locale encoding to be UTF-8
export LC_ALL="C.utf8"

# PowerShell fix for "You must install or update .NET to run this application".
# See: https://stackoverflow.com/questions/73131168/you-must-install-or-update-net-to-run-this-application
export DOTNET_ROLL_FORWARD="LatestMajor"

export BAT_THEME="Dracula"

################################################################################
# ZSH specific
################################################################################

# Exclude command started with space from history
setopt HIST_IGNORE_SPACE

# Additional key bindings
bindkey "^U"      backward-kill-line
bindkey "^H"      backward-kill-word
bindkey "\e[3;5~" backward-kill-word

# Use bash completion
autoload -U bashcompinit && bashcompinit

################################################################################
# pyenv
#
# Load before oh-my-zsh pyenv plugin
################################################################################

if which pyenv &>/dev/null ; then
  export PYENV_ROOT="${HOME}/.pyenv"

  test -d "${PYENV_ROOT}/bin" && PATH=$_:$PATH && export PATH

  eval "$(pyenv init -)"
fi

################################################################################
# Powerlevel10k
################################################################################

# Instant prompt
# Should stay close to the top of ~/.zshrc
test -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" &&\
  source $_

source ~/.p10k.zsh

# Theme should be loaded before oh-my-zsh
ZSH_THEME="powerlevel10k/powerlevel10k"

typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
typeset -g POWERLEVEL9K_DIR_BACKGROUND=33 # blue prompt

# {{-  if or (eq .chezmoi.os "darwin") (and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft")) -}}
# Prompt gradation for macOS or WSL
typeset -g POWERLEVEL9K_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL='%K{#585854} %K{#84847C} %K{#B1B1A5} %k'
typeset -g   POWERLEVEL9K_RIGHT_PROMPT_LAST_SEGMENT_END_SYMBOL='%K{#B1B1A5} %K{#84847C} %K{#585854} %k'
# {{- end }}

################################################################################
# oh-my-zsh
#
# See: https://github.com/ohmyzsh/ohmyzsh/wiki/Settings
################################################################################

export ZSH="${HOME}/.oh-my-zsh"

# History timestamp fomat
HIST_STAMPS="yyyy-mm-dd"

# chezmoi workaround
DISABLE_AUTO_UPDATE="true"

# Treat dash and underscore similarly
HYPHEN_INSENSITIVE="true"

# Plugins should be loaded before oh-my-zsh
plugins=(
  docker
  dotnet
  fast-syntax-highlighting
  gh
  git
  golang
  httpie
  nmap
  opentofu
  pip
  podman
  python
  rclone
  systemd
  terraform
  zsh-autosuggestions
  zsh-history-substring-search
 #kubectl
 #kubetail
 #pyenv # doesn't work
 #rsync
 #suse
 #zsh-syntax-highlighting
)

source ${ZSH}/oh-my-zsh.sh

################################################################################
# Extra path
################################################################################

test -d ~/bin        && PATH=$_:$PATH && export PATH
test -d ~/go/bin     && PATH=$_:$PATH && export PATH
test -d ~/.cargo/bin && PATH=$_:$PATH && export PATH
test -d ~/.local/bin && PATH=$_:$PATH && export PATH

################################################################################
# pipx
################################################################################

#export PIPX_HOME="${HOME}/.pipx"

# Tab completion
# See: pipx completions
if which register-python-argcomplete &>/dev/null ; then
  eval "$(register-python-argcomplete pipx)"
fi

################################################################################
# direnv
################################################################################

if which direnv &>/dev/null ; then
  # Grey status
  export DIRENV_LOG_FORMAT=$'\e[90mdirenv: %s\e[0m'

  eval "$(direnv hook zsh)"
fi

################################################################################
# fzf
#
# Should be loaded after oh-my-zsh plugins
################################################################################

if which fzf &>/dev/null ; then
  source <(fzf --zsh)
fi

################################################################################
# nvs
################################################################################

if [ -d ${HOME}/.nvs ] ; then
  export NVS_HOME="$HOME/.nvs"

  if [ -s "$NVS_HOME/nvs.sh" ] ; then
    source "$NVS_HOME/nvs.sh"
  fi

  nvs use lts &>/dev/null
fi

################################################################################
# Perl
################################################################################

test -r ~/.perlrc && source $_

################################################################################
# Additional completions
################################################################################

for f in /etc/zsh_completion.d/* ; do source $f ; done

test -d ~/.completions && for f in ~/.completions/* ; do source $f ; done

# Command not found
test -r /etc/zsh_command_not_found && source $_

# govc
test -r /etc/bash_completion.d/govc_bash_completion && source $_

################################################################################
# Aliases
################################################################################

# safety
alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'

# ls
alias   ls='eza'
alias    l='ls -lgah'
alias   la='ls -lgAh'
alias   ll='ls -lgh'
alias  lsa='ls -lgah'
alias   l1='ls -1'
alias   lt='ls -T'
alias  llt='ll -T'
alias  lat='la -T'
alias  lta='lat'
alias  lla='ls -lgah'
alias llat='ls -lgahT'
alias llta='llat'

alias     rl='readlink -f'
alias    rgh="rg --hidden -g '!.git'"
alias    rga='rgh'
alias    w3m='w3m -sixel'
alias    cls='clear'
#alias    sed='sed  -E'
alias   grep='grep -E --color'
alias   diff='diff    --color'
alias   ncal='cal -v'
alias   cal3='cal -v3'
alias   sudo='sudo '
alias   trim="sed 's,^\\s+|\\s+\$,,g'"
alias  mkdir='mkdir -p'
alias  dmesg='dmesg -HTL'
alias reload="exec $SHELL"
alias vmstat='vmstat -SM -w'
alias iperf3='iperf'

# Clipboard copy
# {{- if eq .chezmoi.os "linux" -}}
# {{-   if .chezmoi.kernel.osrelease | lower | contains "microsoft" }}
alias xclip='clip.exe'
# {{-   else }}
alias xclip='trim | xclip -r -sel clip'
# {{-   end }}
alias pbcopy='xclip'
# {{- end }}
# {{- if eq .chezmoi.os "darwin" -}}
alias xclip='pbcopy'
# {{- end }}

# nvim
if which nvim &>/dev/null ; then
  alias      vi='nvim'
  alias     vim='nvim'
  alias    view='nvim -R'
  alias vimdiff='nvim -d'
fi

# fastfetch
alias  neofetch='fastfetch'
# {{- if eq .chezmoi.os "linux" -}}
# {{-   if has "suse" (splitList " " .chezmoi.osRelease.idLike) }}
alias fastfetch='fastfetch -l opensuse'
# {{-   end -}}
# {{- end }}

################################################################################
# Functions
################################################################################

colortbl(){
  for i in {0..255} ; do
    print -Pn \
      "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " \
      ${${(M)$((i%6)):#3}:+$'\n'}
  done
}

################################################################################
# k8s
################################################################################

test -d ~/.krew/bin && PATH=$_:$PATH && export PATH

test -r ~/.kubectl-aliases/.kubectl_aliases && source $_

alias  kns="kubectl ns"
alias kctx="kubectl ctx"

# {{- if eq .chezmoi.os "linux" -}}
# {{-   if .chezmoi.kernel.osrelease | lower | contains "microsoft" }}
################################################################################
# WSL
################################################################################

if uname -r | grep -qi microsoft ; then

  # Windows command helper to work with WSL path smoothly
  __import_win_cmd(){
    local CMD=$1

    cat <<EOF
    __win_${CMD}(){
      if [ -f "\$@[-1]" ] || [ -d "\$@[-1]" ]; then
        ${CMD}.exe \$@[1,-2] "\$(wslpath -w \$@[-1])"
        #DEBUG: true
      else
        ${CMD}.exe \$@
        #DEBUG: false
      fi
    }
EOF
  }

  ## Examples
  ##
  ## nvim
  #if which nvim.exe &>/dev/null ; then
  #  eval "$(__import_win_cmd nvim)"

  #  alias      vi="__win_nvim"
  #  alias     vim="__win_nvim"
  #  alias    view="__win_nvim -R"
  #  alias vimdiff="__win_nvim -d"
  #fi

  # SSH agent
  eval $(ssh-agent -s) 1>/dev/null
fi
# {{-   end -}}
# {{- end }}

# vim:ft=zsh:
